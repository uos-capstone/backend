version: "3.8"

# ──────────────────────────────
# 공통 Spring 설정
# ──────────────────────────────
x-spring-common: &spring-common
  build:
    context: .
    dockerfile: Dockerfile
  image: my-spring-app:latest
  depends_on:
    - redis
    - rabbitmq
    - mongodb
    - postgres            # ← 추가
  environment:
    PROFILE: dev

    # PostgreSQL
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/brainoverflow
    SPRING_DATASOURCE_USERNAME: postgres
    SPRING_DATASOURCE_PASSWORD: postgres

    # Redis
    REDIS_HOST: redis
    REDIS_PORT: 6379

    # RabbitMQ
    SPRING_RABBITMQ_HOST: rabbitmq
    SPRING_RABBITMQ_PORT: 5672

    # MongoDB
    SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/brainoverflow

services:
  # ────────────────
  # Infrastructure
  # ────────────────
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"   # 관리 UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=brainoverflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # ────────────────
  # Spring 애플리케이션
  # ────────────────
  spring-1:
    <<: *spring-common
    ports:
      - "8080:8080"

  spring-2:
    <<: *spring-common
    ports:
      - "8081:8080"

  spring-3:
    <<: *spring-common
    ports:
      - "8082:8080"

# ────────────────
# Persistence volumes
# ────────────────
volumes:
  mongo-data:
  postgres-data:
